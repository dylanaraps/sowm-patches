--- a/Makefile
+++ b/Makefile
@@ -10,7 +10,7 @@
 	cp config.def.h config.h
 
 sowm: sowm.o
-	$(CC) $(LDFLAGS) -O3 -o $@ $+ -lX11
+	$(CC) $(LDFLAGS) -O3 -o $@ $+ -lX11 -lXext
 
 install: all
 	install -Dm755 sowm $(DESTDIR)$(BINDIR)/sowm
--- a/config.def.h
+++ b/config.def.h
@@ -2,6 +2,7 @@
 #define CONFIG_H
 
 #define MOD Mod4Mask
+#define ROUND_CORNERS 20
 
 const char* menu[]    = {"dmenu_run",      0};
 const char* term[]    = {"st",             0};
Only in sowm-patched: config.h
--- a/sowm.c
+++ b/sowm.c
@@ -4,6 +4,7 @@
 #include <X11/XF86keysym.h>
 #include <X11/keysym.h>
 #include <X11/XKBlib.h>
+#include <X11/extensions/shape.h>
 #include <stdlib.h>
 #include <signal.h>
 #include <unistd.h>
@@ -60,6 +61,9 @@
         wy + (mouse.button == 1 ? yd : 0),
         ww + (mouse.button == 3 ? xd : 0),
         wh + (mouse.button == 3 ? yd : 0));
+
+    if (mouse.button == 3)
+        win_round_corners(mouse.subwindow, ROUND_CORNERS);
 }
 
 void key_press(XEvent *e) {
@@ -140,8 +144,43 @@
 
     } else
         XMoveResizeWindow(d, cur->w, cur->wx, cur->wy, cur->ww, cur->wh);
+
+    win_round_corners(cur->w, cur->f ? 0 : ROUND_CORNERS);
 }
 
+void win_round_corners(Window w, int rad) {
+    unsigned int ww, wh, dia = 2 * rad;
+
+    win_size(w, &(int){1}, &(int){1}, &ww, &wh);
+
+    if (ww < dia || wh < dia) return;
+
+    Pixmap mask = XCreatePixmap(d, w, ww, wh, 1);
+
+    if (!mask) return;
+
+    XGCValues xgcv;
+    GC shape_gc = XCreateGC(d, mask, 0, &xgcv);
+
+    if (!shape_gc) {
+        XFreePixmap(d, mask);
+        return;
+    }
+
+    XSetForeground(d, shape_gc, 0);
+    XFillRectangle(d, mask, shape_gc, 0, 0, ww, wh);
+    XSetForeground(d, shape_gc, 1);
+    XFillArc(d, mask, shape_gc, 0, 0, dia, dia, 0, 23040);
+    XFillArc(d, mask, shape_gc, ww-dia-1, 0, dia, dia, 0, 23040);
+    XFillArc(d, mask, shape_gc, 0, wh-dia-1, dia, dia, 0, 23040);
+    XFillArc(d, mask, shape_gc, ww-dia-1, wh-dia-1, dia, dia, 0, 23040);
+    XFillRectangle(d, mask, shape_gc, rad, 0, ww-dia, wh);
+    XFillRectangle(d, mask, shape_gc, 0, rad, ww, wh-dia);
+    XShapeCombineMask(d, w, ShapeBounding, 0, 0, mask, ShapeSet);
+    XFreePixmap(d, mask);
+    XFreeGC(d, shape_gc);
+}
+
 void win_to_ws(const Arg arg) {
     int tmp = ws;
 
@@ -203,6 +242,8 @@
         .sibling    = ev->above,
         .stack_mode = ev->detail
     });
+
+    win_round_corners(ev->window, ROUND_CORNERS);
 }
 
 void map_request(XEvent *e) {
@@ -215,6 +256,7 @@
 
     if (wx + wy == 0) win_center((Arg){0});
 
+    win_round_corners(w, ROUND_CORNERS);
     XMapWindow(d, w);
     win_focus(list->prev);
 }
--- a/sowm.h
+++ b/sowm.h
@@ -50,6 +50,7 @@
 void win_kill(const Arg arg);
 void win_prev(const Arg arg);
 void win_next(const Arg arg);
+void win_round_corners(Window w, int rad);
 void win_to_ws(const Arg arg);
 void ws_go(const Arg arg);
 int  xerror() { return 0; }
